SYMBOLS {
    DCOMN_START:	value = $0300;
    DCOMN_SIZE:		value = $00cd;
    DBUFR_START:	value = $0600;
    DBUFR_SIZE:		value = $0100;
    DSPEC_START:	value = DCOMN_START + DCOMN_SIZE;
    DSPEC_SIZE:		value = DBUFR_START - DSPEC_START;
}

MEMORY {
    MUSICZP: start = $fb, size = 4;
    EXOMIZERZP: start = $57, size = 11;
    LOWMEM: start = $07ff, size = $0801, fill = yes;
    MUSIC: start = $1000, size = $1000, fill = yes;
    HIMEM: start = $2000, size = $b000;

    DRIVECOMMON: start = DCOMN_START, size = DCOMN_SIZE;
    DRIVESPECIFIC: start = DSPEC_START, size = DSPEC_SIZE, define = yes;
    DRIVE1541: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVE1571: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVE1581: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVECMDHD: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVECMDFD: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVEBUFFER: start = DBUFR_START, size = DBUFR_SIZE;
}

SEGMENTS {
    MUSICZP: load = MUSICZP, type = zp;
    EXOMIZERZP: load = EXOMIZERZP, type = zp;
    STARTUP: load = LOWMEM, type = ro;
    LOADER: load = LOWMEM, type = rw;
    EXOBUFFER: load = LOWMEM, type = rw, align = $0100;
    EXODECRUNCH: load = LOWMEM, type = rw, align = $0100;

    MUSIC: load = MUSIC, type = rw;

    CODE: load = HIMEM, type = ro;
    DATA: load = HIMEM, type = rw;
    RODATA: load = HIMEM, type = ro;

    DRIVECOMMON: load = HIMEM, run = DRIVECOMMON, type = rw, define = yes, align = $0100;
    DRIVE1541:   load = HIMEM, run = DRIVE1541, type = rw, define = yes;
    DRIVE1571:   load = HIMEM, run = DRIVE1571, type = rw, define = yes;
    DRIVE1581:   load = HIMEM, run = DRIVE1581, type = rw, define = yes;
    DRIVECMDHD:  load = HIMEM, run = DRIVECMDHD, type = rw, define = yes;
    DRIVECMDFD:  load = HIMEM, run = DRIVECMDFD, type = rw, define = yes;
    DRIVEBUFFER: load = DRIVEBUFFER, type = bss, align = $0100;

    EXOTABLE: load = HIMEM, type = bss;
    BSS: load = HIMEM, type = bss;
}
