
# This linker configuration is based on the original c64.cfg.
# It has following modifications:
# - LORAM is from $0801 to $1000, this can be seen in Ultimax mode
# - Normal RAM is from $1000 to $7FFF only, because of cartridge ROM
# - Stack and heap are from $C000 to $CFFF

SYMBOLS {
    __STACKSIZE__ = $0800;

    DCOMN_START:    value = $0300;
    DCOMN_SIZE:     value = $00cd;
    DBUFR_START:    value = $0600;
    DBUFR_SIZE:     value = $0100;
    DSPEC_START:    value = DCOMN_START + DCOMN_SIZE;
    DSPEC_SIZE:     value = DBUFR_START - DSPEC_START;
}

MEMORY {
    ZP:     start = $0002, size = $001A, type = rw, define = yes;
    LORAM:  start = $07FF, size = $0801, file = %O, define = yes, fill = yes;
    RAM:    start = $1000, size = $5e00, file = %O, define = yes;
    HIRAM:  start = $C400, size = $0C00, define = yes;

    DRIVECOMMON: start = DCOMN_START, size = DCOMN_SIZE;
    DRIVESPECIFIC: start = DSPEC_START, size = DSPEC_SIZE, define = yes;
    DRIVE1541: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVE1571: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVE1581: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVECMDHD: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVECMDFD: start = DSPEC_START, size = DSPEC_SIZE;
    DRIVEBUFFER: start = DBUFR_START, size = DBUFR_SIZE;
}

SEGMENTS {
    STARTUP:  load = LORAM, type = ro;
    LOWCODE:  load = LORAM, type = ro, optional = yes;
    SPRITES:  load = LORAM, type = ro, align = $40;
    INIT:     load =   RAM, type = ro, define = yes, optional = yes;
    CODE:     load =   RAM, type = ro;
    RODATA:   load =   RAM, type = ro;
    DATA:     load =   RAM, type = rw;

    # >>>> Uload M3 >>>>
    LOADER:   load = RAM, type = rw, align = $0100;

    DRIVECOMMON: load = RAM, run = DRIVECOMMON, type = rw, define = yes,
      align = $0100;
    DRIVE1541:   load = RAM, run = DRIVE1541, type = rw, define = yes;
    DRIVE1571:   load = RAM, run = DRIVE1571, type = rw, define = yes;
    DRIVE1581:   load = RAM, run = DRIVE1581, type = rw, define = yes;
    DRIVECMDHD:  load = RAM, run = DRIVECMDHD, type = rw, define = yes;
    DRIVECMDFD:  load = RAM, run = DRIVECMDFD, type = rw, define = yes;
    DRIVEBUFFER: load = DRIVEBUFFER, type = bss, align = $0100;
    # <<<< Uload M3 <<<<

    ZPSAVE:   load =   RAM, type = bss;
    BSS:      load =   RAM, type = bss, define = yes;
    HEAP:     load = HIRAM, type = bss, optional = yes; # must sit just below stack
    ZEROPAGE: load =    ZP, type = zp;
}

FEATURES {
    CONDES: segment = INIT,
        type = constructor,
        label = __CONSTRUCTOR_TABLE__,
        count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
        type = destructor,
        label = __DESTRUCTOR_TABLE__,
        count = __DESTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
        type = interruptor,
        label = __INTERRUPTOR_TABLE__,
        count = __INTERRUPTOR_COUNT__;
}



MEMORY {
}

