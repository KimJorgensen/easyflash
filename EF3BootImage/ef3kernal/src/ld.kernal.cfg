

MEMORY {
    CPUSTACK: start = $0100, size = $0100;

    XRAM:     start = $0800, size = $7800, define = yes;
    RAM:      start = $DF00, size = $00F0, define = yes;
    LOROM:    start = $E000, size = $0100, fill = yes, fillval = $ff, file = %O, define = yes;
    ROM:      start = $E100, size = $1DC2, fill = yes, fillval = $ff, file = %O, define = yes;
    COMMON:   start = $FEC2, size = $0081, fill = yes, fillval = $ff, file = %O, define = yes;
    GAP:      start = $FF43, size = $00B7, fill = yes, fillval = $ff, file = %O, define = yes;
    VECTORS:  start = $FFFA, size = $0006, fill = yes, fillval = $ff, file = %O, define = yes;
}

SEGMENTS {
    JMP_CODE:       load = LOROM,          type = ro,  define = yes;
    CODE:           load = ROM,            type = ro,  define = yes;
    RODATA:         load = ROM,            type = ro,  define = yes, align = $100;
    #DATA:          load = ROM, run = RAM, type = rw,  define = yes;
    #BSS:           load = RAM,            type = bss, define = yes;
    HEAP:           load = RAM,            type = bss, optional = yes; # must sit just below stack
    KERNAL_COMMON:  load = COMMON,         type = ro,  define = yes;
    VECTORS:        load = VECTORS,        type = ro;
}

SYMBOLS {
    __STACKSIZE__: value = $0080, type = weak; # 2k stack
}
